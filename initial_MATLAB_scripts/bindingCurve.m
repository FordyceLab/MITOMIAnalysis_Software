function [fitresult, gof] = bindingCurve(chamber, ratio,name)
%CREATEFIT(CHAMBER,RATIO)
%  Create a fit.
%
%  Data for 'Binding Curve' fit:
%      X Input : chamber
%      Y Output: ratio
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 20-Jun-2016 19:30:50


%% Fit: 'Binding Curve'.
[xData, yData] = prepareCurveData( chamber, ratio );
% Bmax=1.58;
% Set up fittype and options.
ft = fittype( '(x*Bmax)/(x+Kd)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0];
opts.StartPoint = [1 50];
opts.Upper = [100 100000000];
% opts.Lower=0;
% opts.StartPoint=5000;
% opts.Upper=200000;


% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Binding Curve' );
h = scatter( xData, yData );
hold on
XX=0:120;
Kd=fitresult.Kd;
Bmax=fitresult.Bmax;
plot((XX*fitresult.Bmax)./(XX+Kd))
% plot((XX*Bmax)./(XX+Kd))
hold off
% legend( h, 'Binding Ratio vs. Chamber Intensity', 'Binding Curve Fit', 'Location', 'NorthEast' );
legend( h, 'Binding Ratio vs. DNA Concentration', 'Location', 'NorthEast' );

strinG=sprintf('y = (x * Bmax)/ (x + Kd) \n Bmax = %f \n Kd = %f \n R^2 = %f',Bmax,fitresult.Kd,gof.rsquare);
annotation('textbox',[.65 .3 0 0],'String',strinG,'FitBoxToText','on')
axis([0 120 0 8])


% Label axes
xlabel 'DNA Concentration (nM)'
ylabel 'Binding Ratio'
TitleName=['PDZ Cut1 - ' name];
title(TitleName)
grid on

% print(TitleName,'-dpng');

% for i=1:10
% [fitresult,gof]=bindingCurve(chamber(i,:),ratio(i,:),name{i});
% KDVal(i)=fitresult.Kd;
% KDConf(:,:,i)=confint(fitresult);
% GOFEval(i)=gof.sse./gof.dfe;
% end
% figure
% bar(1:10,KDVal)
% hold on
% errorbar(1:10,KDVal,KDConf(2,2,:)-KDConf(1,2,:),'.')
% figure
% scatter(1:10,GOFEval)
% title('Kd vs Oligo')
% ylabel('Chamber Intensity')
% xlabel('Oligo')

